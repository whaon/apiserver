<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	">
	<aop:aspectj-autoproxy />
	<context:component-scan base-package="com.mileweb.glb.apiserver">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<!-- <property name="useSuffixPatternMatch" value="false"></property>
		<property name="useRegisteredSuffixPatternMatch" value="false"></property> -->
		<property name="useTrailingSlashMatch" value="true"></property>
	</bean>
	
	<mvc:annotation-driven>
		<mvc:message-converters>
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	            <property name="objectMapper" ref="objectMapper"/>
	        </bean>
	        <bean class="org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter">
	            <property name="objectMapper" ref="xmlMapper"/>
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 日期格式化，注解的日期会覆盖该配置@JsonFormat -->
	<bean id="objectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean"
      p:indentOutput="true"
      p:simpleDateFormat="yyyy-MM-dd HH:mm:ss"/>
      
    <bean id="xmlMapper" parent="objectMapper" p:createXmlMapper="true" p:simpleDateFormat="yyyy"/>
	
	<!-- 静态资源 -->
	<!-- <mvc:default-servlet-handler/> -->
	
	<!-- 也可以，三种方式 -->
	<mvc:resources location="/html/" mapping="/html/**"></mvc:resources>
	<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
	
	    <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
  <!--   <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        如果不加默认到 使用classpath下的 ValidationMessages.properties
        <property name="validationMessageSource" ref="messageSource"/>
    </bean> -->
	
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	    <!-- 国际化信息所在的文件名 -->                     
	    <property name="basename" value="messages" />   
	    <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  -->               
	    <property name="useCodeAsDefaultMessage" value="true" />           
	</bean>
	
	<!-- <mvc:interceptors>  
	    国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 
	    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  
	</mvc:interceptors>   -->
	
	<!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	 -->
	 
	 <!-- <bean id="localeResolver" class="com.mileweb.glb.apiserver.support.MyAcceptHeaderLocaleResolver"></bean> -->
	 
	 <!-- 统一异常处理 -->
	 <bean id="exceptionHandler" class="com.mileweb.glb.apiserver.support.GlobalExceptionHandler"></bean>
      
      <!-- controller中指定view的id表示明确使用该view -->
	<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" id="definiteJson"/>
	
	<mvc:view-resolvers>
		<mvc:bean-name/>
		<mvc:jsp prefix="/html/" suffix=".html" />
	</mvc:view-resolvers>
	
</beans>